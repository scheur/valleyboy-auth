version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
      nodejs: 20
    commands:
      # Install uv with validation
      - curl -LsSf https://astral.sh/uv/install.sh | UV_FORCE_INSTALL=1 bash
      - source /root/.local/bin/env
      - uv --version || exit 1
      - which uv || exit 1
  pre_build:
    commands:
      - echo Validating CloudFormation template...
      - aws cloudformation validate-template --template-body file://template.yaml
      - echo Creating virtual environment...
      - uv venv
      - source .venv/bin/activate
      - echo Installing dependencies...
      - uv pip install -r requirements.txt
  build:
    commands:
      # Package Lambda function
      - cd lambda/chat
      - mkdir -p package
      - cp -r ../../.venv/lib/python3.12/site-packages/* package/
      - cp index.py package/
      - cd package
      - zip -r9 ../function.zip .
      - cd ../../..
      # Package CloudFormation template
      - aws cloudformation package --template-file template.yaml --s3-bucket ${ARTIFACT_BUCKET} --output-template-file packaged.yaml
  post_build:
    commands:
      - echo Build completed

artifacts:
  files:
    - packaged.yaml
    - lambda/chat/function.zip
  base-directory: '.'

cache:
  paths:
    - /root/.local/bin/**/*
    - /root/.cache/uv/**/*
    - /root/.cache/pip/**/*
    - .venv/**/*