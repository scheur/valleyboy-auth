AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'valleyboy.io authentication stack'

Parameters:
  DomainName:
    Type: String
    Default: valleyboy.io
  
Resources:
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames: 
        - !Sub "*.${DomainName}"
      ValidationMethod: DNS

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: valleyboy-users
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      ClientName: valleyboy-web-client
      CallbackURLs: 
        - !Sub "https://${DomainName}/callback"
        - !Sub "https://www.${DomainName}/callback"
      LogoutURLs:
        - !Sub "https://${DomainName}"
        - !Sub "https://www.${DomainName}"
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO
      PreventUserExistenceErrors: ENABLED

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub "auth.${DomainName}"
      CustomDomainConfig:
        CertificateArn: !Ref Certificate
      UserPoolId: !Ref UserPool

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
          - !Sub "www.${DomainName}"
          - !Sub "auth.${DomainName}"
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Origins:
          - Id: S3Origin
            DomainName: !Sub "${DomainName}.s3-website-us-east-1.amazonaws.com"
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
          - Id: CognitoHostedUI
            DomainName: !Sub "${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com"
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
        CacheBehaviors:
          - PathPattern: "/oauth2/*"
            TargetOriginId: CognitoHostedUI
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true

  Route53Records:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: Z0784189181KVEHDOY62L
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt CloudFrontDistribution.DomainName
        - Name: !Sub "www.${DomainName}"
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt CloudFrontDistribution.DomainName
        - Name: !Sub "auth.${DomainName}"
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt CloudFrontDistribution.DomainName

Outputs:
  UserPoolId:
    Value: !Ref UserPool
  UserPoolClientId:
    Value: !Ref UserPoolClient
  CloudFrontDomain:
    Value: !GetAtt CloudFrontDistribution.DomainName
  CognitoDomain:
    Value: !Sub "auth.${DomainName}"